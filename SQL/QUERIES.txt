use [AdventureWorks2012]

--
SELECT * FROM [HumanResources].[Department]

--SHOW ME ALL THE DEPARTMENT NAMES.
SELECT NAME FROM [HumanResources].[Department]

--SHOW ME ALL THE GROUP

SELECT GROUPNAME FROM [HumanResources].[Department]

--SHOW ME ALL THE DISTINCT GROUPNAME
SELECT DISTINCT GROUPNAME FROM [HumanResources].[Department]

--SHOW ME ALL THE DEPARTMENT NAME WHO ARE A PART OF MANUFACTURING
SELECT NAME, GROUPNAME FROM [HumanResources].[Department]
WHERE GROUPNAME LIKE 'MANUFACTURING'


--GIVE ME ALL THE EMPLOYEES FROM THE EMPLOYEE TABLE
SELECT * FROM [HumanResources].[Employee]

--GIVE ME A LIST OIF ALL EMPLOYEE WHO HAVE A ORGLEVEL = 2
SELECT * FROM [HumanResources].[Employee] WHERE ORGANIZATIONLEVEL = 2

--GIVE ME A LIST OF ALL EMPLOYEES WHO HAVE ORGLEVEL = 2 or 3
SELECT * FROM [HumanResources].[Employee] WHERE ORGANIZATIONLEVEL IN (2,3)

--GIVE ME A LIST OF EMPLOYEES WHO HAVE A TITLE AS FACILITIES MANAGER
SELECT * FROM [HumanResources].[Employee] WHERE JOBTITLE LIKE 'FACILITIES MANAGER'


--GIVE ME ALL THE EMPLOYEES WHO HAVE THE WORD MANAGER IN THEIR TITLE
SELECT * FROM [HumanResources].[Employee] WHERE JOBTITLE LIKE '%Control%'


--GIVE ME ALL EMPLOYEE WHO ARE BORN AFTER Jan 1 , 1980
SELECT * FROM [HumanResources].[Employee] WHERE Birthdate > '1/1/1980'

--GIVE ME ALL EMPLOYEES WHO ARE BORN BETWEEN Jan1 , 1970 and Jan1 , 1980
SELECT * FROM [HumanResources].[Employee] WHERE BirthDate > '1/1/1970' AND BirthDate < '1/1/1980'

SELECT * FROM [HumanResources].[Employee] WHERE BirthDate BETWEEN '1/1/1970' AND '1/1/1980'

---CALCULATED COLUMNS.
SELECT NAME, LISTPRICE FROM [Production].[Product]

SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE FROM [Production].[Product]

--INTO
 
 SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE  INTO [Production].[Product_2] FROM [Production].[Product]

 SELECT * FROM [Production].[Product_2]

 SELECT NAME, LISTPRICE, LISTPRICE + 10 AS ADJUSTED_LIST_PRICE  INTO #tmpname FROM [Production].[Product]

 SELECT * FROM #tmpname

 --DELETE DATA FROM TABLE
 DELETE FROM [Production].[Product_2]
 WHERE NAME LIKE 'Bearing Ball'
 
 SELECT * FROM [Production].[Product_2]

 ---UPDATE 

 UPDATE [Production].[Product_2]
 SET NAME = 'BLADE_NEW'
 WHERE NAME LIKE 'BLADE'

 SELECT * FROM [Production].[Product_2]
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
 /****** Script for SelectTopNRows command from SSMS  ******/

 CREATE TABLE MYEMPLOYEE (EMPLOYEEID INT, FIRSTNAME VARCHAR(20), LASTNAME VARCHAR(20))
 
 TRUNCATE TABLE MYEMPLOYEE
 
 INSERT INTO MYEMPLOYEE VALUES (1, 'Michael', 'Scott')
 INSERT INTO MYEMPLOYEE VALUES (2, 'Pam', 'Beesly')
 INSERT INTO MYEMPLOYEE VALUES (3, 'Dwight', 'Schrute')

 SELECT * FROM MYEMPLOYEE


 CREATE TABLE MYSALARY (EMPLOYEEID INT, SALARY FLOAT)

 INSERT INTO MYSALARY VALUES (1, 10000)
 INSERT INTO MYSALARY VALUES (2, 8000)
 INSERT INTO MYSALARY VALUES (3, 6000)

 SELECT * FROM MYSALARY
 SELECT * FROM MYEMPLOYEE

 SELECT A.FIRSTNAME, A.LASTNAME, B.SALARY FROM MYEMPLOYEE A INNER JOIN MYSALARY B
 ON A.EMPLOYEEID = B.EMPLOYEEID

 --LEFT OUTER JOIN
 CREATE TABLE MYPHONE (EMPLOYEEID INT, PHONNENUMBER INT)

 INSERT INTO MYPHONE VALUES (1, 1211123342)
 INSERT INTO MYPHONE VALUES (2, 1111111111)

 SELECT * FROM MYEMPLOYEE
 SELECT * FROM MYPHONE

SELECT A.FIRSTNAME, A.LASTNAME, B.PHONNENUMBER 
FROM MYEMPLOYEE A LEFT JOIN MYPHONE B ON A.EMPLOYEEID = B.EMPLOYEEID


--RIGHT JOINS
CREATE TABLE MYPARKING (EMPLOYEEID INT, PARKINGSPOT VARCHAR(20))

INSERT INTO MYPARKING VALUES (1, 'A1')
INSERT INTO MYPARKING VALUES (2, 'A2')

SELECT * FROM MYPARKING
SELECT * FROM MYEMPLOYEE

SELECT A.PARKINGSPOT, B.FIRSTNAME, B.LASTNAME
FROM MYPARKING A RIGHT JOIN MYEMPLOYEE B ON A.EMPLOYEEID = B.EMPLOYEEID

--FULL OUTER JOIN
CREATE TABLE MYCUSTOMER(CUSTOMERID INT, CUSTOMERNAME VARCHAR(20))

TRUNCATE TABLE MYCUSTOMER
INSERT INTO MYCUSTOMER VALUES (1, 'RAKESH')
INSERT INTO MYCUSTOMER VALUES (3, 'JOHN')

SELECT * FROM MYCUSTOMER

CREATE TABLE MYORDER (ORDERNUMBER INT, ORDERNAME VARCHAR(20), CUSTOMERID INT)

truncate table MYORDER
INSERT INTO MYORDER VALUES (1, 'SOMEORDER1', 1)
INSERT INTO MYORDER VALUES (2, 'SOMEORDER2', 2)
INSERT INTO MYORDER VALUES (3, 'SOMEORDER3', 7)
INSERT INTO MYORDER VALUES (4, 'SOMEORDER4', 8)

SELECT * FROM MYCUSTOMER
SELECT * FROM MYORDER

SELECT A.CUSTOMERID,  A.CUSTOMERNAME, B.ORDERNUMBER, B.ORDERNAME, B.ORDERNAME 
FROM MYCUSTOMER A FULL OUTER JOIN MYORDER B ON A.CUSTOMERID = B.CUSTOMERID


--CROSS JOIN
SELECT * FROM MYEMPLOYEE
SELECT * FROM MYSALARY

SELECT * FROM MYEMPLOYEE CROSS JOIN MYSALARY
SELECT * FROM MYEMPLOYEE , MYSALARY


-----------------------------------------------------------------
-----------------------------------------------------------------
--DATES

SELECT GETDATE()

SELECT GETDATE() - 2

--DATEPART

SELECT DATEPART(yyyy, GETDATE())

SELECT DATEPART(dd, GETDATE())

SELECT DATEPART(mm, GETDATE())

--DATEADD

SELECT DATEADD(day, 4, GETDATE())
SELECT DATEADD(month, 4, GETDATE())
SELECT DATEADD(year, 4, GETDATE())

--DATEDIFF
SELECT DATEDIFF(day, '6/1/2015', GETDATE())
SELECT DATEDIFF(month, '6/1/2015', GETDATE())

SELECT DATEDIFF(month, '4/1/2015', GETDATE())

SELECT DATEDIFF(year, '6/1/2014', GETDATE())

--QUERY
SELECT top 10 * FROM [AdventureWorks2012].[Production].[WorkOrder]

SELECT WorkOrderID, ProductID, StartDate, EndDate,  DATEDIFF(day, StartDate, EndDate) 
FROM [AdventureWorks2012].[Production].[WorkOrder]

--GET THE FIRST DAY OF THIS MONTH
SELECT (DATEADD(dd, -(DATEPART(day, GETDATE()) - 1), GETDATE()))

---FUNCTIONS
SELECT * FROM MYSALARY

--AGGREGATE FUNCTIONS
SELECT AVG(SALARY) FROM MYSALARY

SELECT COUNT(SALARY) FROM MYSALARY

SELECT COUNT(*) FROM MYSALARY

SELECT SUM(SALARY) FROM MYSALARY

SELECT MIN(SALARY) FROM MYSALARY

SELECT MAX(SALARY) FROM MYSALARY


--STRING FUNCTIONS
SELECT * FROM MYORDER

SELECT ORDERNUMBER, ORDERNAME, CONCAT(ORDERNAME, ' ' , ORDERNAME) AS CONCATENATEDTEXT FROM MYORDER

--RAND()
SELECT ORDERNUMBER, ORDERNAME, CONCAT(ORDERNAME, ' ' , RAND(5)) AS CONCATENATEDTEXT FROM MYORDER

--LEFT
SELECT ORDERNUMBER, ORDERNAME, LEFT(ORDERNAME, 5) FROM MYORDER

--RIGHT
SELECT ORDERNUMBER, ORDERNAME, RIGHT(ORDERNAME, 5) FROM MYORDER

--SUBSTRING
SELECT ORDERNUMBER, ORDERNAME, SUBSTRING(ORDERNAME, 2, 5) FROM MYORDER

--LOWERCASE
SELECT ORDERNUMBER, ORDERNAME, LOWER(ORDERNAME) FROM MYORDER

--LENGHT OF STRING
SELECT ORDERNUMBER, ORDERNAME, LEN(ORDERNAME) FROM MYORDER

SELECT ORDERNUMBER, ORDERNAME, CONCAT(UPPER(LEFT(ORDERNAME, 1)), LOWER(SUBSTRING(ORDERNAME, 2, LEN(ORDERNAME)))) FROM MYORDER

--TRIM 
SELECT '   MyText    '
SELECT LEN('   MyText    ')

SELECT LTRIM('   MyText    ')
SELECT RTRIM('   MyText    ')
SELECT RTRIM(LTRIM('   MyText    '))












